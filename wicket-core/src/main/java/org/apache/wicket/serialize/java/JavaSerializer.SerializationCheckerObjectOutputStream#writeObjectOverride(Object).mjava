		@Override
		protected final void writeObjectOverride(Object obj) throws IOException
		{
			try
			{
				oos.writeObject(obj);
			}
			catch (NotSerializableException nsx)
			{
				if (CheckingObjectOutputStream.isAvailable())
				{
					try
					{
						// trigger serialization again, but this time gather some more info
						CheckingObjectOutputStream checkingObjectOutputStream =
							new CheckingObjectOutputStream(outputStream, new ObjectSerializationChecker(nsx));
						checkingObjectOutputStream.writeObject(obj);
					}
					catch (CheckingObjectOutputStream.ObjectCheckException x)
					{
						throw x;
					}
					catch (Exception x)
					{
						x.initCause(nsx);
						throw new WicketRuntimeException("A problem occurred while trying to collect debug information about not serializable object", x);
					}

					// if we get here, we didn't fail, while we should
					throw nsx;
				}
				throw nsx;
			}
			catch (Exception e)
			{
				log.error("error writing object {} : {}", obj, e.getMessage(), e);
				throw new WicketRuntimeException(e);
			}
		}

