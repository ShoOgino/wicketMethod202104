	@Override
	public final void onRequest()
	{
		Form.MethodMismatchResponse methodMismatch = onMethodMismatch();
		if (methodMismatch == Form.MethodMismatchResponse.ABORT)
		{
			AjaxRequestAttributes attrs = getAttributes();
			String desiredMethod = attrs.getMethod().toString();
			String actualMethod = ((HttpServletRequest) RequestCycle.get().getRequest().getContainerRequest()).getMethod();
			if (!desiredMethod.equalsIgnoreCase(actualMethod))
			{
				LOG.debug("Ignoring the Ajax request because its method '{}' is different than the expected one '{}",
				          actualMethod, desiredMethod);
				return;
			}
		}

		WebApplication app = (WebApplication)getComponent().getApplication();
		AjaxRequestTarget target = app.newAjaxRequestTarget(getComponent().getPage());

		RequestCycle requestCycle = RequestCycle.get();
		requestCycle.scheduleRequestHandlerAfterCurrent(target);

		respond(target);
	}

