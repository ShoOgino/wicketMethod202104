	/**
	 * Process the request cycle
	 * 
	 * @param requestCycle
	 * @param webResponse
	 * @param httpServletRequest
	 * @param httpServletResponse
	 * @param chain
	 * @return false, if the request could not be processed
	 * @throws IOException
	 * @throws ServletException
	 */
	protected boolean processRequestCycle(RequestCycle requestCycle, WebResponse webResponse,
		HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse,
		final FilterChain chain) throws IOException, ServletException
	{
		boolean reqProcessed;
		boolean respFlushed = false;
		try
		{
			reqProcessed = requestCycle.processRequest();
			if (reqProcessed && !Session.isSessionInvalidated(requestCycle))
			{
				respFlushed = true;
				webResponse.flush();
			}
		}
		finally
		{
			requestCycle.detach();
		}

		if (!reqProcessed)
		{
			if (chain != null)
			{
				// invoke next filter from within Wicket context
				chain.doFilter(httpServletRequest, httpServletResponse);
			}
		}
		else if (!respFlushed)
		{
			webResponse.flush();
		}
		return reqProcessed;
	}

