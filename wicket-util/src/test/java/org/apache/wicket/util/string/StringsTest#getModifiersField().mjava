	private Field getModifiersField() throws NoSuchFieldException
	{
		try
		{
			return Field.class.getDeclaredField("modifiers");
		}
		catch (NoSuchFieldException e) {
			try
			{
				Method getDeclaredFields0 = Class.class.getDeclaredMethod("getDeclaredFields0", boolean.class);
				getDeclaredFields0.setAccessible(true);
				Field[] fields = (Field[]) getDeclaredFields0.invoke(Field.class, false);
				for (Field field : fields)
				{
					if ("modifiers".equals(field.getName()))
					{
						return field;
					}
				}
			}
			catch (ReflectiveOperationException ex)
			{
				e.addSuppressed(ex);
			}
			throw e;
		}
	}

